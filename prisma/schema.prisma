generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EventsToSubscribe {
  user_created
  user_updated
  user_deleted
  link_created
  link_updated
  link_deleted
}

enum Plan {
  Free_Plan
  Premium_Plan
  Enterprise_Plan
}

model User {
  id        String     @id @default(uuid())
  name      String?
  email     String     @unique
  password  String
  apiKey    String     @unique @default(uuid())
  urls      UrlShort[]
  salt      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  endpoints Endpoint[]
  App       App[]
}

model App {
  id        String     @id @default(uuid())
  name      String
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  endpoint  Endpoint[]
  urls      UrlShort[]
  plan      Plan       @default(Free_Plan)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Endpoint {
  id               String              @id @default(uuid())
  description      String /// webhook name/desc
  url              String
  subscribedEvents EventsToSubscribe[]
  signingSecret    String
  user             User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  app              App                 @relation(fields: [appId], references: [id], onDelete: Cascade)
  userId           String
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  appId            String
}

model UrlShort {
  id          String         @id @default(nanoid())
  original    String
  description String?
  shortId     String         @unique
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  clicks      ClickTracker[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  App         App?           @relation(fields: [appId], references: [id])
  appId       String?
}

model ClickTracker {
  id        String   @id @default(uuid())
  url       UrlShort @relation(fields: [urlId], references: [id], onDelete: Cascade)
  urlId     String
  ip        String?
  country   String?
  userAgent String?
  createdAt DateTime @default(now())
}
